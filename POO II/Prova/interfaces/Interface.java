/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;
import conversor.*;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 *
 * @author camilo.070695
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    List<String> operacoes;
    private conversor.Conversor conv;
    public Interface() {
        conv = new conversor.Conversor();
        initComponents();
        operacoes = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        txtInput1 = new javax.swing.JTextField();
        cmbSelect1 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        txtInput2 = new javax.swing.JTextField();
        cmbSelect2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnConverte = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setAutoscrolls(false);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        cmbSelect1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Kelvin" }));
        cmbSelect1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelect1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtInput1)
                    .addComponent(cmbSelect1, 0, 178, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbSelect1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        txtInput2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInput2ActionPerformed(evt);
            }
        });

        cmbSelect2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Kelvin" }));
        cmbSelect2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelect2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtInput2, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                    .addComponent(cmbSelect2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtInput2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbSelect2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("=");

        btnConverte.setBackground(new java.awt.Color(255, 0, 0));
        btnConverte.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnConverte.setText("Converte");
        btnConverte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConverteActionPerformed(evt);
            }
        });

        jMenu1.setText("Arquivo");

        jMenuItem1.setText("Salvar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Sair");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConverte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnConverte, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConverteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConverteActionPerformed
        try{
        if (cmbSelect1.getSelectedItem().toString().equals(cmbSelect2.getSelectedItem().toString())) {
            txtInput2.setText(txtInput1.getText() + conv.retornaAbv(cmbSelect2.getSelectedItem().toString()));
            operacoes.add("Converteu " + txtInput1.getText() + " " + cmbSelect1.getSelectedItem().toString() + " para " + txtInput1.getText() + " " + cmbSelect1.getSelectedItem().toString());
        }
        
        if (cmbSelect1.getSelectedItem().toString().equals("Celsius")) {
            if (cmbSelect2.getSelectedItem().toString().equals("Kelvin")) {
                double convercao = Double.parseDouble(txtInput1.getText());
                conv.converte(convercao, "Celsius", "Kelvin");
                txtInput2.setText("" + conv.retornaValor("Kelvin") + conv.retornaAbv("Kelvin"));
                operacoes.add("Converteu " + convercao + " Celsius para " + conv.retornaValor("Kelvin") + conv.retornaAbv("Kelvin"));
            } else if (cmbSelect2.getSelectedItem().toString().equals("Fahrenheit")) {
                double convercao = Double.parseDouble(txtInput1.getText());
                conv.converte(convercao, "Celsius", "Fahrenheit");
                txtInput2.setText("" + conv.retornaValor("Fahrenheit") + conv.retornaAbv("Fahrenheit"));
                operacoes.add("Converteu " + convercao + " Celsius para " + conv.retornaValor("Fahrenheit") + conv.retornaAbv("Fahrenheit"));
            }
        }
        
        if (cmbSelect1.getSelectedItem().toString().equals("Fahrenheit")) {
            if (cmbSelect2.getSelectedItem().toString().equals("Kelvin")) {
                double convercao = Double.parseDouble(txtInput1.getText());
                conv.converte(convercao, "Fahrenheit", "Kelvin");
                txtInput2.setText("" + conv.retornaValor("Kelvin") + conv.retornaAbv("Kelvin"));
                operacoes.add("Converteu " + convercao + " Fahrenheit para " + conv.retornaValor("Kelvin") + conv.retornaAbv("Kelvin"));
            } else if (cmbSelect2.getSelectedItem().toString().equals("Celsius")) {
                double convercao = Double.parseDouble(txtInput1.getText());
                conv.converte(convercao, "Fahrenheit", "Celsius");
                txtInput2.setText("" + conv.retornaValor("Celsius") + conv.retornaAbv("Celsius"));
                operacoes.add("Converteu " + convercao + " Fahrenheit para " + conv.retornaValor("Celsius") + conv.retornaAbv("Celsius"));
            }
        }
        
        if (cmbSelect1.getSelectedItem().toString().equals("Kelvin")) {
            if (cmbSelect2.getSelectedItem().toString().equals("Fahrenheit")) {
                double convercao = Double.parseDouble(txtInput1.getText());
                conv.converte(convercao, "Kelvin", "Fahrenheit");
                txtInput2.setText("" + conv.retornaValor("Fahrenheit") + conv.retornaAbv("Fahrenheit"));
                operacoes.add("Converteu " + convercao + " Kelvin para " + conv.retornaValor("Fahrenheit") + conv.retornaAbv("Fahrenheit"));
            } else if (cmbSelect2.getSelectedItem().toString().equals("Celsius")) {
                double convercao = Double.parseDouble(txtInput1.getText());
                conv.converte(convercao, "Kelvin", "Celsius");
                txtInput2.setText("" + conv.retornaValor("Celsius") + conv.retornaAbv("Celsius"));
                operacoes.add("Converteu " + convercao + " Kelvin para " + conv.retornaValor("Celsius") + conv.retornaAbv("Celsius"));
            }
        }
        } catch (Exception e) {
            txtInput2.setText("NaN");
        }
    }//GEN-LAST:event_btnConverteActionPerformed

    private void cmbSelect2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelect2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSelect2ActionPerformed

    private void txtInput2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInput2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInput2ActionPerformed

    private void cmbSelect1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelect1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSelect1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            File arquivo = new File("C:\\Users\\camilo.070695\\Desktop\\log_conversor.txt");
            FileWriter fileWriter = new FileWriter(arquivo);
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
            for (String operacao : operacoes) {
                bufferedWriter.write(operacao);
                bufferedWriter.newLine();
            }
            bufferedWriter.close();
        }
        catch(IOException ex) {
            txtInput1.setText("Erro Escrita!");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConverte;
    private javax.swing.JComboBox<String> cmbSelect1;
    private javax.swing.JComboBox<String> cmbSelect2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField txtInput1;
    private javax.swing.JTextField txtInput2;
    // End of variables declaration//GEN-END:variables
}
